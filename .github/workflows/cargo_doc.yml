name: Cargo doc workflow

on:
  workflow_call:
    inputs:
      PROJECT_ROOT:
        description: Path to th project to document
        type: string
        default: '.'
      ONLY_LIB:
        description: If document package's library
        type: boolean
        default: false
      RELEASE_MODE:
        description: If document optimized artifacts with the release profile
        type: boolean
        default: true
      OUTPUT_FOLDER:
        description: Path where to save output documentation
        type: string
        default: 'website_build'
      ADDITIONAL_OPTIONS:
        description: Additional options space-seperated list to pass to cargo doc command
        type: string
        default: ''
jobs:
  cargo_doc:
    runs-on: ubuntu-latest
    container:
      image: rust:1.57-buster
    steps:
      - name: Checkout 
        uses: actions/checkout@v2
      - name: Move to project root directory
        run: cd ${{ inputs.PROJECT_ROOT }}
      - name: Check existence of Cargo.toml manifest file
        run: |
          if [ ! -f "Cargo.toml" ]; then
            echo "ERROR --> Any Cargo.toml file isn't present in the given root project folder ${{ inputs.PROJECT_ROOT }}"
            exit 1
          fi
      - name: Check if --lib and --release options are activated
        run: |
          if [ ${{ inputs.ONLY_LIB }} ]; then
            echo "ADDITIONAL_OPTIONS+=' --lib'" >> GITHUB_ENV
          fi
          if [ ${{ inputs.RELEASE_MODE }} ]; then
            echo "ADDITIONAL_OPTIONS+=' --release'" >> GITHUB_ENV
          fi
      - name: Check if CI workspace is tdifferent to the PROJECT ROOT
        run: |
          if [ ${{ inputs.PROJECT_ROOT }} != GITHUB_WORKSPACE ]; then
            echo "OUTPUT_FOLDER='GITHUB_WORKSPACE/${{ inputs.OUTPUT_FOLDER }}'" >> GITHUB_ENV
          fi
      - name: Build documentation
        run: |
          echo "Inputs ONLY_LIB: ${{ inputs.ONLY_LIB }}, RELEASE_MODE: ${{ inputs.RELEASE_MODE }}"
          echo "Inputs OUTPUT_FOLDER: ${{ inputs.OUTPUT_FOLDER }}, ADDITIONAL_OPTIONS: ${{ inputs.ADDITIONAL_OPTIONS }}"
          echo "Env updates OUTPUT_FOLDER: ${{ env.OUTPUT_FOLDER }}, ADDITIONAL_OPTIONS: ${{ env.ADDITIONAL_OPTIONS }}"
          echo "Env updates ONLY_LIB: ${{ env.ONLY_LIB }}, RELEASE_MODE: ${{ env.RELEASE_MODE }}"
          cargo doc --target-dir ${{ env.OUTPUT_FOLDER }} ${{ env.ADDITIONAL_OPTIONS }}
      - name: Upload artifacts
        uses: actions/upload-artifact@v2
        with:
          name: Documentation
          path: ${{ inputs.OUTPUT_FOLDER }}
          retention-days: 15